Богдан, здравствуйте.
У меня был длинный перерыв в обучении, но за последние пару месяцев я усердно повторял ранее пройденный материал.
Буду рад комментариям.

- Как организовать клиент-серверное взаимодействие?
Клиент запускает приложение, открывается диалоговое окно, в котором необходимо ввести логин и пароль. Отправка данных для авторизации пользователя осуществляется нажатием enter или при нажатии кнопки "Авторизация". Сервер обрабатывает полученные данные и клиенту присваивается статус авторизации. После успешной авторизации у клиента закрывается окно авторизации и открывается окно пользователя, где он взаимодействует со своей директорией на сервере.

- Как и в каком виде передавать файлы?
С помощью сериализации. При передаче файла будет создан объект класса, в котором будут хранится имя файла, его размер, директория, тело файла, а так же служебные команды для сервера. Далее данный класс отправляется байтами на сервер, где данный объект класса будет десериализирован.

- Как пересылать большие файлы?
Пока затрудняюсь ответить на данный вопрос, но думаю, что нужно будет подсчитывать получаемый поток данных, и в какой то момент записывать данный поток на HDD, высвобождая оперативную память. После получения всего потока, необходимо будет данный объект склеить.

- Как пересылать служебные команды?
Служебные команды будут в передаваемом экземпляре класса.

- Что хранить в базе данных?
В базе данных будут хранится логин, а так же хеш пароля. Сервер будет искать пользователя с указанным логином, если такой имеется, то захеширует его пароль и сравнит с хешом пароля пользователя.

- Как передавать структуру каталогов/файлов?
Не уверен что это верное решение,  но мысль такова. Я бы постарался реализовать передачу структуры файлов путем внесения в класс передаваемого объекта информацию о директории.  Если пользователь хочет скопировать на сервер папку с файлами, то для каждой папки/файла создается экземпляр класса, который содержит информацию о пути к файлу до копируемой папки. 

- Какую библиотеку использовать для сетевого взаимодействия:
Хотелось бы на io, так как есть хоть какой то опыт работы с ним и понимание, как это работает. Но буду использовать Netty, так как данный фреймворк уже по сути готовый инструмент, который под капотом тот же io и nio, но с уже готовыми решениями для наших задач. Netty значительно упростит передачу данных.